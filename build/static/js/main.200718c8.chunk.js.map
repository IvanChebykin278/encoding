{"version":3,"sources":["modules/shift.js","modules/decryption.js","modules/encryption.js","components/encryption.js","actions/encodedAction.js","actions/types.js","components/decryption.js","pages/MainPage.js","components/navbar.js","actions/renderAction.js","reducers/showReducer.js","reducers/encodedReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["shiftAlphabet","shift","alphabet","shiftedAlphabet","i","length","currentLetter","undefined","concat","charsNumer","unique","arr","result","str","includes","push","compareNumeric","a","b","decrypt","message","aEncryptedMessages","shifts","searchShifts","console","log","j","encryptedMessage","toUpperCase","indexOfLetter","indexOf","msg","toLowerCase","frequencyChars","numberChars","countChar","maxFrequency","Math","abs","map","item","sort","encrypt","output","width","height","input","Encryption","props","massageInput","React","createRef","shiftInput","encryptButton","onChange","bind","onClick","change","state","massage","encryptionMessage","event","value","detail","selectedOption","attributes","this","setState","target","name","test","alert","encryptMessage","Number","sMessage","current","addEventListener","icon","id","className","level","style","required","ref","placeholder","display","class","selected","design","readonly","Component","connect","encoded","alphbet","dispath","type","payload","Decryption","decryptButton","dialogButton","messageInput","dialog","selectItem","decryptionMessage","document","getElementById","close","decryptMessage","decryptionMessages","open","header-text","key","marginLeft","messages","MainPage","onExit","onEnter","onExited","onEntered","flag","rendering","CSSTransition","in","appear","classNames","timeout","render","component","Navbar","select","onSelected","showToEnctyptPage","showToDectyptPage","collapsed","fixed","show-overflow","text","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","position","bottom","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.200718c8.chunk.js","sourcesContent":["export const shiftAlphabet = (shift, alphabet) => {\n    var shiftedAlphabet = '';\n    for (var i = 0; i < alphabet.length; i++) {\n        var currentLetter = (alphabet[i + shift] === undefined) ? (alphabet[i + shift - alphabet.length]) : (alphabet[i + shift]); //Текущая буква со сдвигом, если выходим за рамки длины алфавита - берем с начала алфавита\n\n        shiftedAlphabet = shiftedAlphabet.concat(currentLetter);\n    }\n    return shiftedAlphabet;\n}","import { shiftAlphabet } from \"./shift\";\n\nconst charsNumer = [5, 0, 9, 14];\n\nconst unique = (arr) => {\n    let result = [];\n  \n    for (let str of arr) {\n      if (!result.includes(str)) {\n        result.push(str);\n      }\n    }\n  \n    return result;\n};\n\nconst compareNumeric = (a, b) => {\n    if (a > b) return 1;\n    if (a == b) return 0;\n    if (a < b) return -1;\n}\n\nexport const decrypt = (message, alphabet) => {\n\n    var aEncryptedMessages = [];\n    var shifts = searchShifts(message, alphabet);\n\n    console.log(shifts);\n\n    for(var j = 0; j < shifts.length; j++)\n    {\n        var shiftedAlphabet = shiftAlphabet(shifts[j], alphabet);\n        var encryptedMessage = '';\n\n        for (var i = 0; i < message.length; i++) {\n            if (!alphabet.includes(message[i].toUpperCase())) {\n                encryptedMessage = encryptedMessage.concat(' ');\n                continue};\n            var indexOfLetter = shiftedAlphabet.indexOf(message[i].toUpperCase());\n            encryptedMessage = encryptedMessage.concat(alphabet[indexOfLetter]);\n        }\n\n        aEncryptedMessages.push({ msg: encryptedMessage.toLowerCase(), shift: shifts[j] });\n    }\n\n    console.log(aEncryptedMessages);\n\n    return aEncryptedMessages;\n}\n\nconst searchShifts = (message, alphabet) => {\n\n    var frequencyChars = [], numberChars = [];\n\n    for(var i = 0; i < alphabet.length; i++) {\n\n        var countChar = 0;\n\n        for(var j = 0; j < message.length; j++) {\n            countChar = (alphabet[i] == message[j]) ? (countChar + 1) : (countChar);\n        }\n\n        frequencyChars.push(countChar*100/message.length);\n\n    }\n\n    var maxFrequency = 0;\n    for(var i = 0; i < frequencyChars.length; i++) {\n        if(frequencyChars[i] > maxFrequency) {\n            maxFrequency = frequencyChars[i];\n        }\n    }\n\n    for(var i = 0; i < frequencyChars.length; i++) {\n        if(frequencyChars[i] == maxFrequency) {\n            numberChars.push(i);\n        }\n    }\n\n    var shifts = [];\n    for(var i = 0; i < numberChars.length; i++) {\n        shifts.push(Math.abs(15 - numberChars[i]));\n    }\n\n    if(shifts.length !== 1) {\n        for(var i = 0; i < numberChars.length; i++) {\n            charsNumer.map(item => {\n                if(item - numberChars[i] !== 0) {\n                    shifts.push(Math.abs(item - numberChars[i]));\n                }\n            });\n        }\n    }\n\n    console.log(unique(shifts).sort(compareNumeric));\n\n    return unique(shifts).sort(compareNumeric);\n\n}","import { shiftAlphabet } from \"./shift\";\n\nexport const encrypt = (message, shift, alphabet) => {\n\n    var shiftedAlphabet = shiftAlphabet(shift, alphabet);\n    var encryptedMessage = '';\n\n    for (var i = 0; i < message.length; i++) {\n        if (!alphabet.includes(message[i].toUpperCase())) {\n            encryptedMessage = encryptedMessage.concat(' ');\n            continue\n        };\n        var indexOfLetter = alphabet.indexOf(message[i].toUpperCase());\n        encryptedMessage = encryptedMessage.concat(shiftedAlphabet[indexOfLetter]);\n    }\n    \n    return encryptedMessage.toLowerCase();\n}","import React, { Component } from 'react';\nimport '../css/encryption.css';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { encryptMessage } from \"../actions/encodedAction\";\n\n\nimport \"@ui5/webcomponents/dist/Label\";\nimport \"@ui5/webcomponents/dist/Input.js\";\nimport \"@ui5/webcomponents/dist/TextArea\";\nimport \"@ui5/webcomponents/dist/List\";\nimport \"@ui5/webcomponents/dist/StandardListItem\";\nimport \"@ui5/webcomponents/dist/Select\";\nimport \"@ui5/webcomponents/dist/Option\";\n\nconst output = {\n    width: '100%',\n    height: '150px'\n};\n\nconst input = {\n    width: '100%',\n    height: '150px'\n};\n\nclass Encryption extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.massageInput = React.createRef();\n        this.shiftInput = React.createRef();\n        this.encryptButton = React.createRef();\n\n        this.onChange = this.onChange.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.change = this.change.bind(this);\n\n        this.state = {\n            massage: '',\n            shift: 0,\n            alphabet: 'АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ',\n            encryptionMessage: ''\n        }\n    }\n\n    change(event) {\n        const value = event.detail.selectedOption.attributes['value'].value;\n        this.setState({\n            ...this.state,\n            [event.target.name]: value\n        });\n    }\n\n    onChange(event) {\n        this.setState({\n            ...this.state,\n            [event.target.name]: event.target.value\n        });\n    }\n\n    onClick(event) {\n\n        var rep = /[a-zA-Z]/;\n        if(rep.test(this.state.message)) {\n            alert('Нельзя использовать анлийский язык');\n            return;\n        }\n\n        this.props.encryptMessage(this.state.massage, Number(this.state.shift), this.state.alphabet);\n        var sMessage = this.props.encryptionMessage;\n        this.setState({\n            ...this.state,\n            encryptionMessage: sMessage\n        });\n    }\n\n    componentDidMount() {\n        this.massageInput.current.addEventListener('change', event => {\n            this.onChange(event);\n        });\n\n        this.shiftInput.current.addEventListener('change', event => {\n            this.change(event);\n        });\n\n        this.encryptButton.current.addEventListener('click', event => {\n            this.onClick(event);\n        });\n\n    }\n\n    render() {\n\n        const listItem = (this.state.encryptionMessage == '') ? (null) : ((<ui5-li icon=\"sap-icon://accept\">{this.state.encryptionMessage}</ui5-li>));\n\n        return (\n            <div id='encrypt' className='content'>\n                <ui5-title level=\"H1\">Шифрование сообщения</ui5-title>\n                <div className=\"container\">\n                    <ui5-label>Соощение:</ui5-label>\n                    <ui5-textarea\n                        style={input}\n                        required\n                        ref={this.massageInput}\n                        name=\"massage\" \n                        placeholder=\"Введите исходное соощение\"></ui5-textarea>\n                </div>\n                <div className=\"container\">\n                    <ui5-label>Сдвиг:</ui5-label>\n                    <ui5-select style={{width: '20%', display: 'block'}} name='shift' ref={this.shiftInput} class=\"select\">\n                        <ui5-option value={1} selected>1</ui5-option>\n                        <ui5-option value={2}>2</ui5-option>\n                        <ui5-option value={3}>3</ui5-option>\n                        <ui5-option value={4}>4</ui5-option>\n                        <ui5-option value={5}>5</ui5-option>\n                        <ui5-option value={6}>6</ui5-option>\n                        <ui5-option value={7}>7</ui5-option>\n                        <ui5-option value={8}>8</ui5-option>\n                        <ui5-option value={9}>9</ui5-option>\n                        <ui5-option value={10}>10</ui5-option>\n                        <ui5-option value={11}>11</ui5-option>\n                        <ui5-option value={12}>12</ui5-option>\n                        <ui5-option value={13}>13</ui5-option>\n                        <ui5-option value={14}>14</ui5-option>\n                        <ui5-option value={15}>15</ui5-option>\n                        <ui5-option value={16}>16</ui5-option>\n                        <ui5-option value={17}>17</ui5-option>\n                        <ui5-option value={18}>18</ui5-option>\n                        <ui5-option value={19}>19</ui5-option>\n                        <ui5-option value={20}>20</ui5-option>\n                        <ui5-option value={21}>21</ui5-option>\n                        <ui5-option value={22}>22</ui5-option>\n                        <ui5-option value={23}>23</ui5-option>\n                        <ui5-option value={24}>24</ui5-option>\n                        <ui5-option value={25}>25</ui5-option>\n                        <ui5-option value={26}>26</ui5-option>\n                        <ui5-option value={27}>27</ui5-option>\n                        <ui5-option value={28}>28</ui5-option>\n                        <ui5-option value={29}>29</ui5-option>\n                        <ui5-option value={30}>30</ui5-option>\n                        <ui5-option value={31}>31</ui5-option>\n                        <ui5-option value={32}>32</ui5-option>\n                    </ui5-select>\n                </div>\n                <div className=\"container\">\n                    <ui5-button ref={this.encryptButton} design=\"Default\">Зашифровать</ui5-button><br /> \n                </div>\n                <div className=\"container\">\n                    <ui5-textarea\n                        readonly\n                        style={output}\n                        placeholder=\"Здесь будет ваше зашфрованное сообщене...\" \n                        value={this.state.encryptionMessage}>\n                    </ui5-textarea>\n                </div>\n            </div>\n        )\n    }\n}\n\nEncryption.propTypes = {\n    encryptMessage: PropTypes.func.isRequired,\n    encryptionMessage: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    encryptionMessage: state.encoded.message,\n});\n\nexport default connect(mapStateToProps, { encryptMessage })(Encryption);\n","import { ENCRYPT_MESSAGE, DECRYPT_MESSAGE } from \"./types\";\nimport { encrypt } from \"../modules/encryption\";\nimport { decrypt } from \"../modules/decryption\";\n\nexport const encryptMessage = (message, shift, alphbet) => dispath => {\n    dispath({\n        type: ENCRYPT_MESSAGE,\n        payload: encrypt(message, shift, alphbet)\n    });\n};\n\nexport const decryptMessage = (message, alphbet) => dispath => {\n    dispath({\n        type: DECRYPT_MESSAGE,\n        payload: decrypt(message, alphbet)\n    });\n}; ","export const SHOW_TO_ENCRYPT_PAGE = 'SHOW_TO_ENCRYPT_PAGE';\nexport const SHOW_TO_DECRYPT_PAGE = 'SHOW_TO_DECRYPT_PAGE';\nexport const ENCRYPT_MESSAGE = 'ENCRYPT_MESSAGE';\nexport const DECRYPT_MESSAGE = 'DECRYPT_MESSAGE';","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { decryptMessage } from \"../actions/encodedAction\";\n\nimport \"@ui5/webcomponents/dist/List\";\nimport \"@ui5/webcomponents/dist/StandardListItem\";\nimport \"@ui5/webcomponents/dist/Label\";\nimport \"@ui5/webcomponents/dist/Input.js\";\nimport \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";\nimport \"@ui5/webcomponents/dist/Title\";\nimport \"@ui5/webcomponents/dist/TextArea\";\nimport \"@ui5/webcomponents/dist/MessageStrip\";\nimport \"@ui5/webcomponents/dist/Dialog\"\n\nconst output = {\n    width: '100%',\n    height: '150px'\n};\n\nconst input = {\n    width: '100%',\n    height: '150px'\n};\n\nclass Decryption extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.decryptButton = React.createRef();\n        this.dialogButton = React.createRef();\n        this.messageInput = React.createRef();\n        this.dialog = React.createRef();\n\n        this.onChange = this.onChange.bind(this);\n        this.onClick = this.onClick.bind(this);\n        this.selectItem = this.selectItem.bind(this);\n\n        this.state = {\n            message: null,\n            alphabet: 'АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ',\n            decryptionMessage: '',\n            shift: null\n        };\n    }\n\n    selectItem(event) {\n\n        console.log(event);\n\n        this.setState({\n            ...this.state,\n            decryptionMessage: event.detail.item.attributes['msg'].value,\n            shift: event.detail.item.attributes['shift'].value\n        });\n        \n        document.getElementById('dialog').close();\n    }\n\n    // this.props.decryptionMessages;\n    onClick(event) {\n\n        var rep = /[a-zA-Z]/;\n        if(rep.test(this.state.message)) {\n            alert('Нельзя использовать анлийский язык');\n            return;\n        }\n\n        this.props.decryptMessage(this.state.message.toUpperCase(), this.state.alphabet);\n\n        if(this.props.decryptionMessages.length > 1) {\n            document.getElementById('dialog').open();\n        } else {\n            this.setState({\n                ...this.state,\n                decryptionMessage: this.props.decryptionMessages[0].msg,\n                shift: this.props.decryptionMessages[0].shift\n            });\n        }\n\n    }\n\n    onChange(event) {\n        this.setState({\n            ...this.state,\n            [event.target.name]: event.target.value\n        });\n    }\n\n    componentDidMount() {\n        this.decryptButton.current.addEventListener('click', event => {\n            this.onClick(event);\n        });\n\n        this.messageInput.current.addEventListener('change', event => {\n            this.onChange(event);\n        });\n\n        this.dialog.current.addEventListener('itemClick', event => {\n            this.selectItem(event);\n        });\n\n        this.dialogButton.current.addEventListener('click', event => {\n            document.getElementById('dialog').open();\n        });\n    }\n\n    render() {\n\n        const shift = this.props.decryptionMessages.length === 0 ? false : true;\n        const open = this.props.decryptionMessages.length > 1 ? true : false;\n\n        return (\n            <div id='decrypt' className='content'>\n                <ui5-dialog\n                    id=\"dialog\" header-text=\"Выбрать сдвиг\">\n                    <ui5-messagestrip style={{width: '300px'}} type=\"Warning\">\n                        В данном случае невозможно точно определить сдвиг. \n                        Выберете его из списка предложенных. \n                    </ui5-messagestrip>\n                    <ui5-list\n                        ref={this.dialog} \n                        style={{height: '300px'}}>\n                        {this.props.decryptionMessages.map(item => (\n                            <ui5-li\n                                msg={item.msg}\n                                shift={item.shift} \n                                key={item.shift}>\n                                {item.shift}\n                            </ui5-li>\n                        ))}\n                    </ui5-list>\n                </ui5-dialog>\n                <ui5-title level=\"H1\">Расшифровка сообщения</ui5-title>\n                <ui5-messagestrip style={{width: '50%'}} type=\"Warning\">\n                    Расшифровка реализована методом частотного анализа.\n                    Поэтому, для того, что бы получить корректно расшфрованое сообщение\n                    необходмо, чтобы оно было достаточно длинным.\n                </ui5-messagestrip>\n                <div className=\"container\">\n                    <ui5-label>Сообщение:</ui5-label>\n                    <ui5-textarea style={input} ref={this.messageInput} name=\"message\" placeholder=\"Введите исходное соощение\"></ui5-textarea>\n                </div>\n                <div className=\"container\">\n                    <ui5-button ref={this.decryptButton} design=\"Default\">Расшфровать</ui5-button>\n                    <ui5-button \n                        style={{marginLeft: '10px', display: open ? 'inline-block' : 'none'}} \n                        ref={this.dialogButton} \n                        design=\"Default\">Вырать сдвиг</ui5-button>\n                    <br /> \n                </div>\n                <div className=\"container\">\n                    <ui5-textarea\n                        readonly\n                        style={output}\n                        placeholder=\"Здесь будет ваше расшфрованное сообщение...\" \n                        value={this.state.decryptionMessage}>\n                    </ui5-textarea>\n                    {shift && <ui5-label>Cдвиг: {this.state.shift}</ui5-label>}\n                </div>\n            </div>\n        )\n    }\n}\n\nDecryption.propTypes = {\n    decryptMessage: PropTypes.func.isRequired,\n    decryptionMessages: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n    decryptionMessages: state.encoded.messages\n});\n\nexport default connect(mapStateToProps, { decryptMessage })(Decryption);\n","import React, { Component } from 'react';\nimport { CSSTransition } from \"react-transition-group\";\nimport { decryption } from \"../modules/decryption\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\n\nimport Encryption from \"../components/encryption\";\nimport Decryption from \"../components/decryption\";\n\nclass MainPage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onExit = this.onExit.bind(this);\n        this.onEnter = this.onEnter.bind(this);\n        this.onExited = this.onExited.bind(this);\n        this.onEntered = this.onEntered.bind(this);\n        this.state = {\n            encrypt: 'appear',\n            decrypt: 'exited'\n        }\n    }\n\n    onExit(event) {\n        this.setState({\n            ...this.state,\n            [event.id]: 'exit'\n        });\n    }\n\n    onEnter(event) {\n        this.setState({\n            ...this.state,\n            [event.id]: 'enter'\n        });\n    }\n\n    onExited(event) {\n        this.setState({\n            ...this.state,\n            [event.id]: 'exited'\n        });\n    }\n\n    onEntered(event) {\n        this.setState({\n            ...this.state,\n            [event.id]: 'entered'\n        });\n    }\n\n    render() {\n        const flag = (this.props.rendering == 'encrypt') ? (true) : (false);\n        const encrypt = (this.state.encrypt == 'exited' && !flag)?(<div></div>):(<Encryption />);\n        const decrypt = (this.state.decrypt == 'exited' && flag)?(<div></div>):(<Decryption />);\n        return (\n            <div>\n                <CSSTransition\n                    in={flag}\n                    appear={true}\n                    classNames=\"my\"\n                    timeout={500}\n                    onExit={this.onExit}\n                    onEnter={this.onEnter}\n                    onEntered={this.onEntered}\n                    onExited={this.onExited}\n                >\n                    {encrypt}\n                </CSSTransition>\n                <CSSTransition\n                    in={!flag}\n                    classNames=\"my1\"\n                    timeout={500}\n                    onExit={this.onExit}\n                    onEnter={this.onEnter}\n                    onEntered={this.onEntered}\n                    onExited={this.onExited}\n                >\n                    {decrypt}\n                </CSSTransition>\n            </div>\n        )\n    }\n}\n\nMainPage.propTypes = {\n    rendering: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = state => ({\n    rendering: state.render.component\n});\n\nexport default connect(mapStateToProps, null)(MainPage);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { showToDectyptPage, showToEnctyptPage } from '../actions/renderAction';\n\nimport \"@ui5/webcomponents/dist/TabContainer\";\nimport \"@ui5/webcomponents/dist/Tab\";\nimport \"@ui5/webcomponents/dist/TabSeparator\";\nimport \"@ui5/webcomponents/dist/Label\";\n\nclass Navbar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.select = React.createRef();\n\n        this.onSelected = this.onSelected.bind(this);\n    }\n\n    componentDidMount() {\n        this.select.current.addEventListener('itemSelect', event => {\n            this.onSelected(event);\n        });\n    }\n\n    onSelected(event) {\n        //console.log(event);\n        if(event.detail.item.id == 'encryption') {\n            this.props.showToEnctyptPage();\n        }\n\n        if(event.detail.item.id == 'decryption') {\n            this.props.showToDectyptPage();\n        }\n        \n    }\n\n    render() {\n        return (\n            <div>\n                <ui5-tabcontainer ref={this.select} class=\"full-width\" collapsed fixed show-overflow>\n                    <ui5-tab id=\"encryption\" text='Зашифровать' selected>\n                    </ui5-tab>\n                    <ui5-tab id=\"decryption\" text='Расшфровать'>\n                    </ui5-tab>\n                </ui5-tabcontainer>\n            </div>\n        )\n    }\n}\n\nNavbar.propTypes = {\n    showToDectyptPage: PropTypes.func.isRequired,\n    showToEnctyptPage: PropTypes.func.isRequired\n}\n\nexport default connect(null, { showToDectyptPage, showToEnctyptPage })(Navbar);","import { SHOW_TO_DECRYPT_PAGE, SHOW_TO_ENCRYPT_PAGE } from \"./types\";\n\nexport const showToEnctyptPage = () => dispath => {\n    dispath({\n        type: SHOW_TO_ENCRYPT_PAGE,\n        payload: 'encrypt'\n    });\n};\n\nexport const showToDectyptPage = () => dispath => {\n    dispath({\n        type: SHOW_TO_DECRYPT_PAGE,\n        payload: 'decrypt'\n    });\n};","import { SHOW_TO_DECRYPT_PAGE, SHOW_TO_ENCRYPT_PAGE } from \"../actions/types\";\n\nconst initialState = {\n    component: 'encrypt'\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case SHOW_TO_ENCRYPT_PAGE:\n            return {\n                ...state,\n                component: action.payload\n            }\n         case SHOW_TO_DECRYPT_PAGE: \n            return {\n                ...state,\n                component: action.payload\n            }\n         default:\n             return state;\n    } \n }","import { ENCRYPT_MESSAGE, DECRYPT_MESSAGE } from \"../actions/types\";\n\nconst initialState = {\n    message: '',\n    messages: []\n};\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case ENCRYPT_MESSAGE:\n            return {\n                ...state,\n                message: action.payload\n            }\n         case DECRYPT_MESSAGE: \n            return {\n                ...state,\n                messages: action.payload\n            }\n         default:\n             return state;\n    } \n }","import { combineReducers } from 'redux';\nimport showReducer from \"./showReducer\";\nimport encodedReducer from \"./encodedReducer\";\n\nexport default combineReducers({\n    render: showReducer,\n    encoded: encodedReducer\n});","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\nconst initialState = {\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer, \n    initialState,\n    compose( \n        applyMiddleware(...middleware)\n    )\n);\n\nexport default store;","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\n\nimport MainPage from \"./pages/MainPage\";\nimport Navbar from \"./components/navbar\";\n\nimport store from './store';\n\n\n\nexport default class App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div>\n          <Navbar />\n          <MainPage />\n        </div>\n        <footer style={{\n          position: 'fixed',\n          bottom: 0\n        }}>{'Author: Chebykin Ivan NMT - 463929; Version: 0.0.2;'}</footer>\n      </Provider>\n    )\n  }\n\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}